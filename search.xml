<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Javascript正则]]></title>
    <url>%2F2018%2F03%2F06%2Fjavasript%E6%AD%A3%E5%88%99%2F</url>
    <content type="text"><![CDATA[正则表达式全部符号解释1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980字符 描述/ 将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，&apos;n&apos; 匹配字符 &quot;n&quot;。&apos;/n&apos; 匹配一个换行符。序列 &apos;//&apos; 匹配 &quot;/&quot; 而 &quot;/(&quot; 则匹配 &quot;(&quot;。^ 匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 &apos;/n&apos; 或 &apos;/r&apos; 之后的位置。$ 匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 &apos;/n&apos; 或 &apos;/r&apos; 之前的位置。* 匹配前面的子表达式零次或多次。例如，zo* 能匹配 &quot;z&quot; 以及 &quot;zoo&quot;。* 等价于&#123;0,&#125;。+ 匹配前面的子表达式一次或多次。例如，&apos;zo+&apos; 能匹配 &quot;zo&quot; 以及 &quot;zoo&quot;，但不能匹配 &quot;z&quot;。+ 等价于 &#123;1,&#125;。? 匹配前面的子表达式零次或一次。例如，&quot;do(es)?&quot; 可以匹配 &quot;do&quot; 或 &quot;does&quot; 中的&quot;do&quot; 。? 等价于 &#123;0,1&#125;。&#123;n&#125; n 是一个非负整数。匹配确定的 n 次。例如，&apos;o&#123;2&#125;&apos; 不能匹配 &quot;Bob&quot; 中的 &apos;o&apos;，但是能匹配 &quot;food&quot; 中的两个 o。&#123;n,&#125; n 是一个非负整数。至少匹配n 次。例如，&apos;o&#123;2,&#125;&apos; 不能匹配 &quot;Bob&quot; 中的 &apos;o&apos;，但能匹配 &quot;foooood&quot; 中的所有 o。&apos;o&#123;1,&#125;&apos; 等价于 &apos;o+&apos;。&apos;o&#123;0,&#125;&apos; 则等价于 &apos;o*&apos;。&#123;n,m&#125; m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，&quot;o&#123;1,3&#125;&quot; 将匹配 &quot;fooooood&quot; 中的前三个 o。&apos;o&#123;0,1&#125;&apos; 等价于 &apos;o?&apos;。请注意在逗号和两个数之间不能有空格。? 当该字符紧跟在任何一个其他限制符 (*, +, ?, &#123;n&#125;, &#123;n,&#125;, &#123;n,m&#125;) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 &quot;oooo&quot;，&apos;o+?&apos; 将匹配单个 &quot;o&quot;，而 &apos;o+&apos; 将匹配所有 &apos;o&apos;。. 匹配除 &quot;/n&quot; 之外的任何单个字符。要匹配包括 &apos;/n&apos; 在内的任何字符，请使用象 &apos;[./n]&apos; 的模式。(pattern) 匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 &apos;/(&apos; 或 &apos;/)&apos;。(?:pattern) 匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 &quot;或&quot; 字符 (|) 来组合一个模式的各个部分是很有用。例如， &apos;industr(?:y|ies) 就是一个比 &apos;industry|industries&apos; 更简略的表达式。(?=pattern) 正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，&apos;Windows (?=95|98|NT|2000)&apos; 能匹配 &quot;Windows 2000&quot; 中的 &quot;Windows&quot; ，但不能匹配 &quot;Windows 3.1&quot; 中的 &quot;Windows&quot;。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。(?!pattern) 负向预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如&apos;Windows (?!95|98|NT|2000)&apos; 能匹配 &quot;Windows 3.1&quot; 中的 &quot;Windows&quot;，但不能匹配 &quot;Windows 2000&quot; 中的 &quot;Windows&quot;。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始x|y 匹配 x 或 y。例如，&apos;z|food&apos; 能匹配 &quot;z&quot; 或 &quot;food&quot;。&apos;(z|f)ood&apos; 则匹配 &quot;zood&quot; 或 &quot;food&quot;。[xyz] 字符集合。匹配所包含的任意一个字符。例如， &apos;[abc]&apos; 可以匹配 &quot;plain&quot; 中的 &apos;a&apos;。[^xyz] 负值字符集合。匹配未包含的任意字符。例如， &apos;[^abc]&apos; 可以匹配 &quot;plain&quot; 中的&apos;p&apos;。[a-z] 字符范围。匹配指定范围内的任意字符。例如，&apos;[a-z]&apos; 可以匹配 &apos;a&apos; 到 &apos;z&apos; 范围内的任意小写字母字符。[^a-z] 负值字符范围。匹配任何不在指定范围内的任意字符。例如，&apos;[^a-z]&apos; 可以匹配任何不在 &apos;a&apos; 到 &apos;z&apos; 范围内的任意字符。/b 匹配一个单词边界，也就是指单词和空格间的位置。例如， &apos;er/b&apos; 可以匹配&quot;never&quot; 中的 &apos;er&apos;，但不能匹配 &quot;verb&quot; 中的 &apos;er&apos;。/B 匹配非单词边界。&apos;er/B&apos; 能匹配 &quot;verb&quot; 中的 &apos;er&apos;，但不能匹配 &quot;never&quot; 中的 &apos;er&apos;。/cx 匹配由 x 指明的控制字符。例如， /cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 &apos;c&apos; 字符。/d 匹配一个数字字符。等价于 [0-9]。/D 匹配一个非数字字符。等价于 [^0-9]。/f 匹配一个换页符。等价于 /x0c 和 /cL。/n 匹配一个换行符。等价于 /x0a 和 /cJ。/r 匹配一个回车符。等价于 /x0d 和 /cM。/s 匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ /f/n/r/t/v]。/S 匹配任何非空白字符。等价于 [^ /f/n/r/t/v]。/t 匹配一个制表符。等价于 /x09 和 /cI。/v 匹配一个垂直制表符。等价于 /x0b 和 /cK。/w 匹配包括下划线的任何单词字符。等价于&apos;[A-Za-z0-9_]&apos;。/W 匹配任何非单词字符。等价于 &apos;[^A-Za-z0-9_]&apos;。/xn 匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，&apos;/x41&apos; 匹配 &quot;A&quot;。&apos;/x041&apos; 则等价于 &apos;/x04&apos; &amp; &quot;1&quot;。正则表达式中可以使用 ASCII 编码。./num 匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，&apos;(.)/1&apos; 匹配两个连续的相同字符。/n 标识一个八进制转义值或一个向后引用。如果 /n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。/nm 标识一个八进制转义值或一个向后引用。如果 /nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 /nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 /nm 将匹配八进制转义值 nm。/nml 如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。/un 匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， /u00A9 匹配版权符号 (?)。]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[办公软件]]></title>
    <url>%2F2018%2F03%2F06%2F2003Offs%2F</url>
    <content type="text"><![CDATA[Office2003完整版自带CDK 带有2007兼容包，挺好用的！带图 office2003下载密码：gwjl 破解版流程图制作工具visio ，挺好用！ visio下载密码：4k5c]]></content>
      <categories>
        <category>常用工具总结</category>
      </categories>
      <tags>
        <tag>办公工具破解版分享</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端]]></title>
    <url>%2F2018%2F03%2F06%2Fmood_2%E5%BF%83%E5%BE%97%2F</url>
    <content type="text"><![CDATA[前端之路 今天上网看到一前辈，对前端学习的方法，觉得说的也挺实在分享！ 现在在前端行业的人越来越多，是因为这个行业门槛最低，工资不错，很多人都想学成工作，外面的线下学校也自然看好这个商机，自然培训机构越来越多，现在在线下学起步都是1万6以上，线上也不低了，也要七八千了，现在找个好点的机构都难找了，商业化的机构，很难学到真技术，简单的皮毛，出去找工作就相当于碰运气….因为现在公司基本不要那种培训四个月的人，现在的要求都很高，绝对不是培训出来的，四个月顶多学习一个皮毛，公司需要的是真正掌握技术的人，而不是只是简单培训四个月的人，能坚持学习下去人非常的少，主要还是坚持。 下面如何自己的线上学习： 找一个学习交流的地方，一些基础的东西你不可能是自己解决的，要有人指点你。 了解如今的市场行情，要知道自己学到什么技能之后才可以去找工作，不然一点方向感都没有。 每天至少要抽出几个小时的时间去学习，坚持学习半年的时间。 有一个系统规划的学习路线，和一个好的学习方法胜过一切，这让你可以有方向感，不至于不知道每天在学习什么。 学习内容总结： HTML+CSS JavaScript jQuery、ajax HTML5+CSS3 这个过程真的是很难熬，有时候都巴不得自己的大脑变电脑能瞬间记住所有的知识点。然而这是不理想的，个人觉得学这个真的心态很重要，这个活，真不是速成的活！！！目前，我还处于学习阶段，希望在学的朋友要坚持住，可能希望就在——前方高能！]]></content>
      <categories>
        <category>随笔日志</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Javascript运动]]></title>
    <url>%2F2018%2F03%2F05%2Fjavasript_1%E8%BF%90%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[简单的函数封装 首先js中动画的方法有setInterval与setTimeout还有requestAnimationFrame三种，三种都有不同的区别！ setInterval一直调用,不会主动停止! setTimeout调用一次！ requestAnimationFrame一直调用，不同的是当离开浏览器后代码就停止运行，当回来的时候代码又接着运行！可是在低版IE大哥下并不能完全试别！ 那么要让它在IE下也能运行，就要封一个兼容包！123window.requestAnimationFrame?window.requestAnimationFrame:function(fn)&#123; setTimeout(fn,2000); &#125;; 它属于window如果有就执行，没有就执行别一个函数包！ 即然动画有开始，自然相对也有退出！1window.cancelAnimationFrame?window.cancelAnimationFrame:clearTimeout; 与上面的相同，用的那种就用那种清除！ 接下来，要拿到操作对象的原始的值，比如宽、高、左、右等！123function getStyle(obj,attr)&#123; return window.getComputedStyle?getComputedStyle(obj)[attr]:obj.currentStyle[attr]; &#125; 接下就是动画运动函数包12345678910111213141516171819202122232425262728293031323334function animation(obj,json,drm)&#123;//传三个值第，对像，对像，时长 var target=&#123;&#125;,init=&#123;&#125;;//接收最终值，当前值 for(var attr in json)&#123;//遍历 target[attr]=parseFloat(json[attr]);//拿值，去单位，包括小数 init[attr]=parseFloat(getStyle(obj,attr)); &#125; var init_tim=new Date();//当前时间 (function run()&#123; var cur_tim=new Date()-init_tim;//运动时长 if(cur_tim&gt;=drm)&#123; cur_tim=drm; //当时长大于等规定的时长后便等于 &#125;else&#123; window.requestAnimationFrame(run); //否则执行动画 &#125; for(var attr in json)&#123; var a=(target[attr]-init[attr])*2/Math.pow(drm,3);//某个属性的速度 var val=a*Math.pow(cur_tim,3)/2;//当前路程 if(attr==&apos;opacity&apos;)&#123;//如果传进来的是透明就去px obj.style[attr]=init[attr]+val; &#125;else if(attr==&apos;zIndex&apos;)&#123;//同样，这个是定位层级 obj.style[attr]=init[attr]+val; &#125;else&#123;//都没有就加上px obj.style[attr]=init[attr]+val+&apos;px&apos;; &#125; &#125; //如果传送来的是函数也可以执行 if(cur_tim&gt;=drm&amp;&amp;fn)&#123; fn()//当然上面要多传一个仓就行了 &#125; &#125;)() &#125;]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个字"热"]]></title>
    <url>%2F2018%2F03%2F05%2Fmood_2%E5%8A%AA%E5%8A%9B%20%2F</url>
    <content type="text"><![CDATA[努力，努力！！！ 哎，最近深圳天气升的很快，有时候真的觉得很热，感觉心情都不是很好！！！莫名的烦燥，看过写过的东西都记不住了！捉急……. 今天早上搭公车上班,结果塞成狗,两三个站花了近半小时,看着都慌,没法了只能再去感受一下地铁的人流,人真是多的跟蚂蚁一样,我就感觉我不是自己上去的,而是被挤上去的……. 此时此刻,我只想说:”有车真好”! 努力加油~~]]></content>
      <categories>
        <category>随笔日志</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[仿JQ内容加载函数封装包兼容IE8以下]]></title>
    <url>%2F2018%2F03%2F05%2Fjavasript_1%E4%BB%BFJQ%E5%86%85%E5%AE%B9%E5%8A%A0%E8%BD%BD%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85%E5%8C%85%E5%85%BC%E5%AE%B9IE8%E4%BB%A5%E4%B8%8B%2F</url>
    <content type="text"><![CDATA[操作原理解析123456789101112131415161718192021 window.ready(function()&#123; //执行语句&#125;);function ready(fn)&#123; if(document.addEventListener)&#123;//标准浏览器下执行 document.addEventListener(&apos;DOMContentLoaded&apos;,function()&#123; fn(); document.removeEventListener(&apos;DOMContentloaded&apos;, arguments.callee, false) &#125;,false); &#125;else&#123; document.attachEvent(&apos;onreadystatechange&apos;,function()&#123;//IE浏览器下执行 if(document.readyState == &apos;complete&apos;)&#123;//文档加载完毕了 fn(); document.detachEvent(&apos;onreadystatechange&apos;,arguments.callee); &#125; &#125;); &#125;&#125; 首先要驱分在addEventListener和attachEvent，一个是在标准浏览器下能完全运行，一个是针对IE浏览器运行的！ addEventListener(监听事件，函数，false或true)false是冒泡，true捕获 detachEvent(监听事件，函数)与addEventListener用法不同的是detachEvent默认的是冒泡，值得注意的是detachEvent的监听事件必须要加上‘on’! arguments.callee可以理解谁触发当前函数，它就代表谁，我是用它来移除当前被监听的函数。]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[仿JQ操作CSS]]></title>
    <url>%2F2018%2F03%2F04%2Fjavasript_1%E4%BB%BFJQ%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[操作原理解析1234567891011121314151617function obj(option)&#123; var typeoF=typeof option; if(typeoF==&apos;string&apos;)&#123; var newOB=option.substring(1); var newOBJ=document.getElementsByClassName(newOB)[0]; &#125;else if(typeoF==&apos;function&apos;)&#123; option(); &#125; var Obj=&#123; css:function(attr,val)&#123; newOBJ.style[attr]=val; return Obj; &#125; &#125; return Obj;&#125;obj(&apos;传一个标签的类名&apos;).css(&apos;宽或高&apos;,&apos;大小像素&apos;).css(&apos;背景&apos;,&apos;颜色&apos;)....等等可以传入多个类型，看需求; 首先用一个写名函数传一个实参 声明一个变量接收传进来的实参，并拿到内型 如果传进来的是字符串行就执行，用substring截取 接下来我们就要通过document获取同样是用变量接收 如果传送来的是个函数那就直接执行，在这里可以用一个return返回一个false，那么如果是函数的话，执行完以后，就跳出了，下面的代码也不会再执行了！ 声明一个json对象Obj在里面放一个函数用CSS样式通过return返回出来，我们这时候再用传值就行了！有一点，如果，要写多个样式，一定要加个return返回出来，以便多次调用！123css:function(attr,val)&#123; newOBJ.style[attr]=val; return Obj;]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sublime text3下载与安装]]></title>
    <url>%2F2018%2F03%2F03%2Fjavasript_1%2F</url>
    <content type="text"><![CDATA[Sublime 常用插件 SideBarEnhancements SideBarEnhancements是一个侧边栏增强工具，可以打开本地的文件夹reveal，可以修改名字rename，可也以移动move等等。他还以一个非常有用的功能，配置相应的快捷键打开特定的浏览器，只需要在Side Bar中的Key Bindings User里面设置如下代码：12345678910111213141516171819202122232425262728293031323334[ //chrome &#123; &quot;keys&quot;: [&quot;f1&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;, &quot;args&quot;: &#123; &quot;paths&quot;: [], &quot;application&quot;: &quot;C:/Program Files (x86)/Google/Chrome/Application/chrome.exe&quot;, &quot;extensions&quot;:&quot;.*&quot; //匹配任何文件类型 &#125; &#125;, //firefox &#123; &quot;keys&quot;: [&quot;f2&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;, &quot;args&quot;: &#123; &quot;paths&quot;: [], &quot;application&quot;: &quot;E:/前端/firefox-56.0.2-2017102416.en-US.win32-tete009-sse2-pgo/firefox.exe&quot;, &quot;extensions&quot;:&quot;.*&quot; &#125; &#125;, //ie &#123; &quot;keys&quot;: [&quot;f3&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;, &quot;args&quot;: &#123; &quot;paths&quot;: [], &quot;application&quot;: &quot;C:/Program Files/Internet Explorer/iexplore.exe&quot;, &quot;extensions&quot;:&quot;.*&quot; &#125; &#125;, //safari /*&#123; &quot;keys&quot;: [&quot;f5&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;, &quot;args&quot;: &#123; &quot;paths&quot;: [], &quot;application&quot;: &quot;D:/Program Files/Safari/safari.exe&quot;, &quot;extensions&quot;:&quot;.*&quot; &#125; &#125;*/] 每一个的application是具体的浏览器的地址。 A File Icon 一个显示文件图标的插件，图标库还算全Boxy Theme 上面的图标结合这个主题用起来也是不错的liveReload 这个一个自动刷新的插件，需要在chrome与sublime中同时安装。sublime中安装直接搜索安装就可以，chrome可以去应用商店安装（使用科学上网工具）。如果没有科学上网工具，提供一个离线版本livereload，下载解压，使用时直接到谷歌的扩展程序页面把.crx后缀的文件直接拖进去。勾选允许访问本地文件。使用时候点一下这个插件让空心变实心。sublime 最新版需要开启插件simple Reload。在同时需要setting user中插入一下代码1&#123;&quot;enabled_plugins&quot;: [&quot;SimpleReloadPlugin&quot;,&quot;SimpleRefresh&quot;]&#125; PackageResourceViewer 可以直接查看并修改系统文件。ctrl+shift+p==&gt;PackageResourceViewer。可以去里面查找相应的文件BracketHighlighter 括号高亮插件。具体使用查看：http://www.itwoa.com/post/3.html可以结合上面的插件修改默认配置文件cTags 可以跳转到函数定义位置。具体查看http://www.piaoyi.org/php/Sublime-Text-CTags.html左上角没有新建使用 ctrl+t ctrl+r组合快捷键下载连接 Sublime Text3 激活码12345678910111213----- BEGIN LICENSE -----eldonSingle User LicenseEA7E-1122628C0360740 20724B8A 30420C09 6D7E046F3F5D5FBB 17EF95DA 2BA7BB27 CCB1494727A316BE 8BCF4BC0 252FB8FF FD97DF71B11A1DA9 F7119CA0 31984BB9 7D71700C2C728BF8 B952E5F5 B941FF64 6D7979DAB8EB32F8 8D415F8E F16FE657 A35381CC290E2905 96E81236 63D2B06D E5F01A6984174B79 7C467714 641A9013 94CA7162------ END LICENSE ------]]></content>
      <categories>
        <category>常用工具总结</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[周未愉快]]></title>
    <url>%2F2018%2F03%2F03%2Fmood_1%2F</url>
    <content type="text"><![CDATA[前端之路 从学习css到javascript至此已经过去3个月了，css目前全线毕业，js还在苦苦挣扎中，每天都在考验记忆力，有时候写案例，用css布局时，发现有一些代码明显记不清了，没办法只能上网搜索，当然这只是小部分而已，可能是不常用的代码，虽然之前有去背，可是用的少还是会忘记的！对于js，可能是没有基础，学起来确实是很费劲，有时候明显懂了，可是拿个案例出来，才发现原来还是不懂。js逻辑性太强了，很容易被带沟里去，不过现在总算也还好，不好也不差，起码已经没有之前那么费劲了，只要多练应该也能过去的！！ 对于新手学习前端，个人觉得最好是用不带代码提示的编写工具进行编写，比如：Editplus 这个软件真的挺不错的，对于新手觉得好用，我现在还一直有保留！ 软件分享地址：https://www.editplus.com/]]></content>
      <categories>
        <category>随笔日志</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[心酸的安装与调试]]></title>
    <url>%2F2018%2F03%2F03%2Fgithub_1%2F</url>
    <content type="text"><![CDATA[Github从安装到一步一步调试，中间曲折真的是多,我遭遇的几个问题！第一，密钥SSH 当拿到密钥以后就是用Git进行验证!—- $ ssh -T git@github.com # 注意邮箱地址不用改 然后在Git里发现并没有提示这一句：Are you sure you want to continue connecting (yes/no)? 当时就傻眼了，心想吧，才开始就出现这种问题，内心有点不安，开始疯狂查资料，把密钥删除然后再添加、把window用户目录底下的ssh\id_rsa.pub文件删除再用命令生成…..等等，来回测试结果得到的结果还是一样报错。 其时这个问题是出在那呢？问题其时就是出在密钥，当密钥出问题后，我们的本能反应是删除，然后接着添加，但是只要仔细观察会发现，删除之后再添加得到的密钥号是一样的，既然是一样那这样来回操作就起不了作用！要如何使获得不一样的密钥号呢？其时很简单，只要保留旧的，再添加新，这样获得的密钥号就是最新的，然后再进行验证，结果通过了！！！ 最后给大家推荐百分之百无误复制window底下的密钥码。首先输入：cd .ssh/ 然后再输入： ls 最后再输入： cat id_rsa.pub 然后就可以看到window底下的密钥码了，接下来复制出来就行了。第二，在hexo下面操作hexo init 这里要注意一个问题，千万不能把hexo文件建在Git下面或与Git同级的根目录下，不然运行这句代码，它会毫不留情的给我们报个错！解决方法：只要把hexo文件夹移出来，单独给个文件夹就OK了！ 如果说已经建了怎么并运行到这一步的时候，怎么办呢？告诉你大胆点直接把hexo删除了，从hexo开始一步一步再进行一遍即可。 到此我的Github已经基本配制OK了！零基础安装推荐上传报错问题1 hexo s 打开服务端口报：ERROR Plugin load failed:hexo-deployer-git2 hexo g 生成静态页面至public目录时报：ERROR Plugin load failed:hexo-deployer-git3 hexo d 部署到GitHub时报：ERROR Plugin load failed:hexo-deployer-git4 以上三个问题同属于一类，解决方案： 输入代码：cnpm install hexo-deployer-git –save 再输入：hexo clean 清除缓存 再输入：hexo g 重新生成静态页面至public目录 再输入：hexo d 重新部署到GitHub]]></content>
      <categories>
        <category>安装经历</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
